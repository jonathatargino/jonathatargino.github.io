---
import { getCollection } from 'astro:content';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const postsMappedByYear = posts.reduce<Record<number, typeof posts>>((output, currentPost) => {
	const postYear = currentPost.data.pubDate.getFullYear();
	if (!output[postYear]) {
		output[postYear] = []
	}

	output[postYear].push(currentPost)
	return output;
}, {})

const postByYerEntries = Object.entries(postsMappedByYear).sort(([keyA], [keyB]) => Number(keyB) - Number(keyA))
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}

				section {
					margin: 0px 48px;
				}
				h4 {
					border-bottom: 0.5px solid #2a2a2a;
					padding-bottom: 8px;
				}
				a {
					color: #008ae6
				}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				{
					postByYerEntries.map(([year, posts]) => (
						<h4>{year}</h4>
						<ul>
							{
								posts.map((post) => (
									<li><a href={`/blog/${post.id}/`}>{post.data.title}</a></li>
								))
							}
						</ul>
					))
				}
			</section>
		</main>
		<Footer />
	</body>
</html>
